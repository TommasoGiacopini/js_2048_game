{"version":3,"sources":["scripts/main.js"],"names":["newTable","button","document","querySelector","gameScore","fieldRows","querySelectorAll","msgStart","msgLose","msgWin","table","tableLength","length","SCORE","WIN_SCORE","isWin","addNumber","emptyCells","forEach","y","yIndex","cell","xIndex","push","Math","floor","random","randomY","randomX","render","x","el","children","textContent","className","move","e","key","moveLeft","moveRight","moveDown","moveUp","JSON","stringify","classList","remove","checkMove","add","removeEventListener","reset","map","msg","reverseRows","reverse","checkRows","newY","filter","reduce","acc","concat","Array","fill","movingField","checkColumns","some","includes","_","addEventListener","contains","replace","innerText"],"mappings":"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","file":"main.de74be5c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst gameScore = document.querySelector('.game-score');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst msgStart = document.querySelector('.message-start');\nconst msgLose = document.querySelector('.message-lose');\nconst msgWin = document.querySelector('.message-win');\n\nlet newTable;\nlet table = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nconst tableLength = table.length;\nlet SCORE = 0;\nconst WIN_SCORE = 2048;\nlet isWin = false;\n\nbutton.addEventListener('click', e => {\n  document.addEventListener('keydown', move);\n\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    msgStart.classList.add('hidden');\n  } else {\n    isWin = false;\n    reset();\n  }\n\n  addNumber();\n  addNumber();\n\n  render();\n});\n\nfunction addNumber() {\n  const emptyCells = [];\n\n  table.forEach((y, yIndex) =>\n    y.forEach((cell, xIndex) =>\n      cell === 0 && emptyCells.push([yIndex, xIndex])\n    )\n  );\n\n  const [randomY, randomX]\n    = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n  table[randomY][randomX] = Math.random() < 0.9 ? 2 : 4;\n}\n\nfunction render() {\n  for (let y = 0; y < tableLength; y++) {\n    for (let x = 0; x < tableLength; x++) {\n      const el = fieldRows[y].children[x];\n      const cell = table[y][x];\n\n      el.textContent = cell || '';\n\n      el.className\n        = `field-cell ${cell ? `field-cell--${cell}` : ''}`;\n    }\n  }\n\n  gameScore.textContent = SCORE;\n}\n\nfunction move(e) {\n  newTable = table;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    default:\n      return;\n  }\n\n  if (JSON.stringify(newTable) !== JSON.stringify(table)) {\n    table = newTable;\n    addNumber();\n    render();\n  }\n\n  if (isWin) {\n    msgWin.classList.remove('hidden');\n  }\n\n  if (!checkMove()) {\n    msgLose.classList.remove('hidden');\n    msgWin.classList.add('hidden');\n    document.removeEventListener('keydown', move);\n  }\n}\n\nfunction reset() {\n  table = table.map((y) => y.map(() => 0));\n  SCORE = 0;\n\n  [msgWin, msgLose].forEach(msg => msg.classList.add('hidden'));\n}\n\nfunction reverseRows() {\n  newTable.forEach(y => y.reverse());\n}\n\nfunction moveLeft() {\n  if (!checkRows()) {\n    return;\n  }\n\n  newTable = newTable.map(y => {\n    const newY\n      = y.filter(cell => cell !== 0)\n        .reduce((acc, cell) => {\n          const preCell = acc[acc.length - 1];\n\n          if (preCell === cell) {\n            acc[acc.length - 1] *= 2;\n            SCORE += acc[acc.length - 1];\n\n            if (acc[acc.length - 1] === WIN_SCORE) {\n              isWin = true;\n            }\n          } else {\n            acc.push(cell);\n          }\n\n          return acc;\n        }, []);\n\n    return newY.concat(Array(tableLength - newY.length).fill(0));\n  });\n}\n\nfunction moveRight() {\n  if (!checkRows()) {\n    return;\n  }\n\n  reverseRows();\n  moveLeft();\n  reverseRows();\n}\n\nfunction moveDown() {\n  movingField();\n  moveRight();\n  movingField();\n}\n\nfunction moveUp() {\n  movingField();\n  moveLeft();\n  movingField();\n}\n\nfunction checkColumns() {\n  return newTable.some(y =>\n    y.some((cell, x) => cell === y[x + 1])\n  );\n}\n\nfunction checkRows() {\n  return newTable.some(y =>\n    y.some((cell, x) => cell === y[x + 1]) || y.includes(0)\n  );\n}\n\nfunction movingField() {\n  newTable\n    = newTable[0].map((_, xIndex) =>\n      newTable.map(y => y[xIndex])\n    );\n}\n\nfunction checkMove() {\n  return checkRows() || (movingField(), checkColumns());\n}\n"]}